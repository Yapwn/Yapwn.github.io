<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Meditations</title>
  <icon>https://yapwn.com/icon.png</icon>
  <subtitle>Work Hard, Have Fun!</subtitle>
  <link href="https://yapwn.com/atom.xml" rel="self"/>
  
  <link href="https://yapwn.com/"/>
  <updated>2022-04-06T00:26:30.206Z</updated>
  <id>https://yapwn.com/</id>
  
  <author>
    <name>Yapwn</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>远程会话管理工具:screen</title>
    <link href="https://yapwn.com/archives/%E8%BF%9C%E7%A8%8B%E4%BC%9A%E8%AF%9D%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7screen/"/>
    <id>https://yapwn.com/archives/%E8%BF%9C%E7%A8%8B%E4%BC%9A%E8%AF%9D%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7screen/</id>
    <published>2022-04-05T15:09:46.000Z</published>
    <updated>2022-04-06T00:26:30.206Z</updated>
    
    
    <summary type="html">&lt;h3 id=&quot;1-screen-是什么&quot;&gt;&lt;a href=&quot;#1-screen-是什么&quot; class=&quot;headerlink&quot; title=&quot;1 screen 是什么&quot;&gt;&lt;/a&gt;1 screen 是什么&lt;/h3&gt;&lt;p&gt;screen通俗的说就是一个关于ssh的远程会话的管理工具。&lt;/p&gt;
&lt;h3 id=&quot;2-screen-有什么用&quot;&gt;&lt;a href=&quot;#2-screen-有什么用&quot; class=&quot;headerlink&quot; title=&quot;2 screen 有什么用&quot;&gt;&lt;/a&gt;2 screen 有什么用&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;创建一个screen会话之后，即使中途ssh突然断开，在当前会话下执行的程序（或命令）也能够继续执行，不受影响&lt;/li&gt;
&lt;li&gt;通过创建screen会话，其他人也可以进入创建的screen会话观察程序（或指令）的执行情况&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://yapwn.com/categories/Linux/"/>
    
    
    <category term="Linux" scheme="https://yapwn.com/tags/Linux/"/>
    
    <category term="command" scheme="https://yapwn.com/tags/command/"/>
    
  </entry>
  
  <entry>
    <title>如何更好理解Peterson算法?</title>
    <link href="https://yapwn.com/archives/%E5%A6%82%E4%BD%95%E6%9B%B4%E5%A5%BD%E7%90%86%E8%A7%A3Peterson%E7%AE%97%E6%B3%95/"/>
    <id>https://yapwn.com/archives/%E5%A6%82%E4%BD%95%E6%9B%B4%E5%A5%BD%E7%90%86%E8%A7%A3Peterson%E7%AE%97%E6%B3%95/</id>
    <published>2022-04-04T12:11:58.000Z</published>
    <updated>2022-04-05T16:03:00.220Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;1-Peterson算法提出的背景&quot;&gt;&lt;a href=&quot;#1-Peterson算法提出的背景&quot; class=&quot;headerlink&quot; title=&quot;1 Peterson算法提出的背景&quot;&gt;&lt;/a&gt;1 Peterson算法提出的背景&lt;/h1&gt;&lt;p&gt;在我们讲述Peterson算法之间，我们先了解一下Peterson算法提出前的背景（即：在这个算法提出之前，前人们都做了哪些工作）这对于我们之后理解Peterson算法有很大的裨益。&lt;/p&gt;
&lt;p&gt;Peterson 算法是基于双线程互斥访问的LockOne与LockTwo算法而来。LockOne算法使用一个 flag 布尔数组，LockTwo 使用一个 turn的整型量，都实现了互斥，但是都存在死锁的可能。Peterson 算法把这两种算法结合起来，完美地用软件实现了双线程互斥问题。&lt;/p&gt;</summary>
    
    
    
    <category term="算法" scheme="https://yapwn.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="OS" scheme="https://yapwn.com/tags/OS/"/>
    
    <category term="Algorithm" scheme="https://yapwn.com/tags/Algorithm/"/>
    
  </entry>
  
  <entry>
    <title>Word操作篇I-公式编辑</title>
    <link href="https://yapwn.com/archives/Word%E6%93%8D%E4%BD%9C%E7%AF%87I-%E5%85%AC%E5%BC%8F%E7%BC%96%E8%BE%91/"/>
    <id>https://yapwn.com/archives/Word%E6%93%8D%E4%BD%9C%E7%AF%87I-%E5%85%AC%E5%BC%8F%E7%BC%96%E8%BE%91/</id>
    <published>2022-03-27T11:27:55.000Z</published>
    <updated>2022-04-04T15:48:13.762Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Yapwn/BlogDataBase/master/ObsidianWord%E5%B0%81%E9%9D%A2%E5%9B%BE.jpg&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;1-背景&quot;&gt;&lt;a href=&quot;#1-背景&quot; class=&quot;headerlink&quot; title=&quot;1 背景&quot;&gt;&lt;/a&gt;1 背景&lt;/h2&gt;&lt;p&gt;想必大家都遇到过要在Word中编辑公式的情况，当然，可能编辑公式还不是最难的，最难的可能是给公式编号吧，如何让公式自动根据章节号进行编号？如何让公式的编号与正文的右边对齐？对于能够熟练使用Word的人来说这些问题倒还好，但是不常使用Word的人来说，可能是挺困难的一件事情，下面就记录一下我的解决方案，一来是方便自己以后查阅（不然过一段时间就又忘记了），二来是给处于同样困境的朋友们一些参考。&lt;/p&gt;</summary>
    
    
    
    <category term="软件" scheme="https://yapwn.com/categories/%E8%BD%AF%E4%BB%B6/"/>
    
    
    <category term="office" scheme="https://yapwn.com/tags/office/"/>
    
    <category term="word" scheme="https://yapwn.com/tags/word/"/>
    
  </entry>
  
</feed>
